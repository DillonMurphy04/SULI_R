---
title: "June 10-14 Activity"
format: html
editor: visual
---

## Play Around With Data

```{r Setup, warning=FALSE, message=FALSE}
library(tidyverse)
library(tibble)
library(kableExtra)
library(tidytext)
library(stringr)
library(SnowballC)
library(patchwork)

data <- read.csv("data_all.csv", skip = 1)
```

## Some Major Takeaways Visualizations

```{r}
personal_prefix <- "Currently..are.you.concerned.about.the.following....If.you.are.not..leave.blank...__________About......Personal.impacts..."
professional_prefix <- "Currently..are.you.concerned.about.the.following....If.you.are.not..leave.blank.....__________Abo......Academic.and.or.professional.impacts..."

remove_prefix <- function(column_name, prefix_to_remove) {
  column_name <- gsub(prefix_to_remove, "", column_name)
  return(column_name)
}

personal_concern_columns <- grep(personal_prefix, names(data), value = TRUE)
professional_concern_columns <- grep(professional_prefix, names(data), value = TRUE)

cleaned_personal_column_names <- lapply(personal_concern_columns, remove_prefix, prefix_to_remove = personal_prefix)
cleaned_professional_column_names <- lapply(professional_concern_columns, remove_prefix, prefix_to_remove = professional_prefix)

df_personal <- data[personal_concern_columns]
df_professional <- data[professional_concern_columns]
names(df_personal) <- cleaned_personal_column_names
names(df_professional) <- cleaned_professional_column_names
```

```{r}
# 0 - Not Concerned
# 1 - pre-covid issue
# 2 - new issue due to covid
# 3 - cannot access resources
head(df_personal)
head(df_professional)
```

```{r}
aggregate_personal <- data.frame(
  Pre_COVID_Count = colSums(df_personal == 1, na.rm = TRUE),
  New_COVID_Count = colSums(df_personal == 2, na.rm = TRUE)
)

aggregate_professional <- data.frame(
  Pre_COVID_Count = colSums(df_professional == 1, na.rm = TRUE),
  New_COVID_Count = colSums(df_professional == 2, na.rm = TRUE)
)

filtered_aggregate_personal <- aggregate_personal[rowSums(aggregate_personal) > 0, ]
filtered_aggregate_professional <- aggregate_professional[rowSums(aggregate_professional) > 0, ]

tbl_personal <- as_tibble(filtered_aggregate_personal)
tbl_professional <- as_tibble(filtered_aggregate_professional)

styled_tbl_personal <- tbl_personal %>%
  mutate(
    Concern_Category = c("Nutrition", "Housing", "Medical", "Finances", "General Well Being", "Mental Health", "Living Conditions", "Distance from Friends & Family", "Relationships", "Childcare", "Education for Kids"),
    Difference = New_COVID_Count - Pre_COVID_Count
  ) %>%
  select(Concern_Category, Pre_COVID_Count, New_COVID_Count, Difference) %>%
  kable(., align = "c", caption = "Distribution of Pre-COVID and New COVID Issues (Personal)") %>%
  kable_styling(full_width = FALSE)

styled_tbl_professional <- tbl_professional %>%
  mutate(
    Concern_Category = c("Learning environment", "Completing education", "Decisions about graduate school", "Other education-related", "Professional development", "Finding a job", "Keeping current job", "Telework tools", "Telework productivity"),
    Difference = New_COVID_Count - Pre_COVID_Count
  ) %>%
  select(Concern_Category, Pre_COVID_Count, New_COVID_Count, Difference) %>%
  kable(., align = "c", caption = "Distribution of Pre-COVID and New COVID Issues (Professional)") %>%
  kable_styling(full_width = FALSE)

styled_tbl_personal
styled_tbl_professional
```

```{r}
personal_labels <- c("Nutrition", "Housing", "Medical", "Finances", "General Well Being", "Mental Health", "Living Conditions", "Distance from Friends & Family", "Relationships", "Childcare", "Education for Kids")

df_personal_long <- filtered_aggregate_personal %>%
  rownames_to_column(var = "Concern_Category") %>%
  pivot_longer(cols = c("Pre_COVID_Count", "New_COVID_Count"), 
               names_to = "Type", values_to = "Count") %>%
  mutate(Concern_Category = factor(Concern_Category, 
                                   levels = rownames(filtered_aggregate_personal),
                                   labels = personal_labels))
type_order <- c("Pre_COVID_Count", "New_COVID_Count")
df_personal_long$Type <- factor(df_personal_long$Type, levels = type_order)

plot_personal <- ggplot(df_personal_long, aes(x = fct_reorder(Concern_Category, Count, .desc = TRUE), y = Count, fill = Type)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = c("skyblue", "orange"), 
                    labels = c("Pre-COVID Issue", "New Issue due to COVID")) +
  labs(title = "Personal",
       x = "", y = "Count", fill = "Issue Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
```

```{r}
professional_labels <- c("Learning environment", "Completing education", "Decisions about graduate school", "Other education-related", "Professional development", "Finding a job", "Keeping current job", "Telework tools", "Telework productivity")

df_professional_long <- filtered_aggregate_professional %>%
  rownames_to_column(var = "Concern_Category") %>%
  pivot_longer(cols = c("Pre_COVID_Count", "New_COVID_Count"), 
               names_to = "Type", values_to = "Count") %>%
  mutate(Concern_Category = factor(Concern_Category, 
                                   levels = rownames(filtered_aggregate_professional),
                                   labels = professional_labels))

type_order <- c("Pre_COVID_Count", "New_COVID_Count")
df_professional_long$Type <- factor(df_professional_long$Type, levels = type_order)

plot_professional <- ggplot(df_professional_long, aes(x = fct_reorder(Concern_Category, Count, .desc = TRUE), y = Count, fill = Type)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = c("skyblue", "orange"), 
                    labels = c("Pre-COVID Issue", "New Issue due to COVID")) +
  labs(title = "Professional",
       x = "", y = "", fill = "Issue Type") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
```

```{r}
combined_plots <- plot_personal + plot_professional +
  plot_layout(guides = "collect") &
  plot_annotation(
    title = "Distribution of Pre-COVID & New Covid Issues",
    caption = "Fig. 1. Bar charts of concern levels for professional and personal impacts revealing dramatic increase in majority of issues",
    theme = theme(plot.caption = element_text(hjust = 0, margin = margin(t = 0, r = 0, b = 0, l = 0), size = 16))
  )

combined_plots
```

```{r}
color_palette <- c("#CCCCCC", "#666666") 

df_professional_diff <- df_professional_long %>%
  spread(Type, Count) %>%
    mutate(Difference = New_COVID_Count - Pre_COVID_Count, 
           Percent_Increase = ((New_COVID_Count - Pre_COVID_Count) / Pre_COVID_Count) * 100) %>% 
  gather(Type, Count, -Concern_Category, -Difference, -Percent_Increase) %>%
  mutate(Concern_Category = fct_reorder(Concern_Category, Difference, .desc = FALSE))

df_personal_diff <- df_personal_long %>%
  spread(Type, Count) %>%
  mutate(Difference = New_COVID_Count - Pre_COVID_Count,
         Percent_Increase = ((New_COVID_Count - Pre_COVID_Count) / Pre_COVID_Count) * 100) %>%
  gather(Type, Count, -Concern_Category, -Difference, -Percent_Increase) %>%
  mutate(Concern_Category = fct_reorder(Concern_Category, Difference, .desc = FALSE))

type_order <- c("Pre_COVID_Count", "New_COVID_Count")
df_professional_diff$Type <- factor(df_professional_diff$Type, levels = type_order)
df_personal_diff$Type <- factor(df_personal_diff$Type, levels = type_order)

plot_personal <- ggplot(df_personal_diff, aes(x = Count, y = Concern_Category, fill = Type)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = color_palette, 
                    labels = c("Pre-COVID Issue", "New Issue due to COVID")) +
  geom_text(data = df_personal_diff %>% filter(Type == "New_COVID_Count"), 
            aes(label = paste0("+",round(Percent_Increase, 1), "%")), 
          hjust = -0.1, size = 3.5) +
  guides(fill = guide_legend(reverse = TRUE)) +
  labs(title = "Personal",
       x = "", y = "", fill = "Issue Type") +
  theme_minimal() +
  theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.title = element_text(vjust = -1, margin = margin(b = -20))) +
  xlim(0, 1300)

plot_professional <- ggplot(df_professional_diff, aes(x = Count, y = Concern_Category, fill = Type)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = color_palette, 
                    labels = c("Pre-COVID Issue", "New Issue due to COVID")) +
  geom_text(data = df_professional_diff %>% filter(Type == "New_COVID_Count"), 
            aes(label = paste0("+",round(Percent_Increase, 1), "%")), 
            hjust = -0.1, size = 3.5) +
  guides(fill = guide_legend(reverse = TRUE)) +
  labs(title = "Professional",
       x = "Count", y = "", fill = "Issue Type") +
  theme_minimal() +
  xlim(0, 1300)

combined_plots <- plot_personal / plot_professional +
  plot_layout(guides = "collect") &
  plot_annotation(
    title = "",
    caption = "Fig. 3.  Comparison of concern levels for professional and personal impacts before and during COVID-19, revealing dramatic increase in majority of issues.\nBars are ordered by differences and labeled with the magnitude of percent increase.",
    theme = theme(plot.caption = element_text(hjust = 0, margin = margin(t = 0, r = 0, b = 0, l = 0), size = 16))
  ) & theme(legend.position = 'top')

combined_plots
```
```{r}
total_counts_professional <- df_professional_long %>%
  summarize(total = sum(Count))
top3_professional <- df_professional_long %>%
  group_by(Concern_Category) %>%
  summarize(total_count = sum(Count)) %>%
  arrange(desc(total_count)) %>%
  slice(1:3) %>%
  pull(Concern_Category)
df_professional_top3 <- df_professional_long %>%
  filter(Concern_Category %in% top3_professional)
total_counts_personal <- df_personal_long %>%
  summarize(total = sum(Count))
top3_personal <- df_personal_long %>%
  group_by(Concern_Category) %>%
  summarize(total_count = sum(Count)) %>%
  arrange(desc(total_count)) %>%
  slice(1:3) %>%
  pull(Concern_Category)
```

```{r}
total_personal_count <- sum(df_personal_long$Count)
df_personal_long <- df_personal_long %>%
  mutate(Proportion = Count / total_personal_count)
total_professional_count <- sum(df_professional_long$Count)
df_professional_long <- df_professional_long %>%
  mutate(Proportion = Count / total_professional_count)
color_palette <- c("#CCCCCC", "#666666")
plot_personal <- ggplot(df_personal_long, aes(x = Proportion, y = fct_reorder(Concern_Category, Proportion, .desc = FALSE), fill = Type)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = color_palette, 
                    labels = c("Pre-COVID Issue", "New Issue due to COVID")) +
  labs(title = "Personal",
       x = "", y = "", fill = "Issue Type") +
  theme_minimal() +
    theme(axis.text.x = element_blank(),
        axis.ticks.x = element_blank(),
        plot.title = element_text(vjust = -1, margin = margin(b = -20))) +
  xlim(0,0.2)

plot_professional <- ggplot(df_professional_long, aes(x = Proportion, y = fct_reorder(Concern_Category, Proportion, .desc = FALSE), fill = Type)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  scale_fill_manual(values = color_palette, 
                    labels = c("Pre-COVID Issue", "New Issue due to COVID")) +
  labs(title = "Professional",
       x = "Proportion", y = "", fill = "Issue Type") +
  theme_minimal() +
  xlim(0,0.2)

combined_plots <- plot_personal / plot_professional +
  plot_layout(guides = "collect") &
  plot_annotation(
    title = "",
    caption = "Fig. 1. Concern levels for professional and personal impacts, revealing dramatic increase in majority of issues",
    theme = theme(plot.caption = element_text(hjust = 0, margin = margin(t = 0, r = 0, b = 0, l = 0), size = 16))
  ) & theme(legend.position = 'top')

combined_plots
```

## Demographics Visualizations

```{r}
race_ethnicity_counts <- data %>%
  separate_rows(`What.is.your.race.and.or.ethnicity..Check.all.that.apply....Selected.Choice`, sep = ",") %>%
  count(`What.is.your.race.and.or.ethnicity..Check.all.that.apply....Selected.Choice`, name = "count")

race_ethnicity_counts <- race_ethnicity_counts %>%
  rename(race_ethnicity = `What.is.your.race.and.or.ethnicity..Check.all.that.apply....Selected.Choice`)

ggplot(race_ethnicity_counts, aes(x = reorder(race_ethnicity, -count), y = count)) +
  geom_bar(stat = "identity") +
  coord_flip() +
  labs(title = "Demographic Makeup",
       x = "Race/Ethnicity",
       y = "Count") +
  theme_minimal()
```

```{r}
race_ethnicity_counts %>%
  ggplot(aes(x = "", y = count, fill = race_ethnicity)) +
  geom_bar(stat = "identity", width = 1) +
  coord_polar("y") +
  labs(title = "Demographic Makeup") +
  theme_void() +
  theme(legend.position = "right")
```

```{r}
render_summary_table_graph <- function(df, column, category_name) {
  total <- nrow(df)
  
  summary_df <- df %>%
    mutate({{column}} := ifelse({{column}} == "Genderfluid, Genderqueer, or Gender Non-conforming","Genderfluid/Genderqueer/Gender non-conforming", {{column}})) %>%
    separate_rows({{column}}, sep = ",") %>%
    count({{column}}, name = "count") %>%
    mutate(percentage = round((count / total) * 100, 2)) %>%
    rename(Category = {{column}}) %>% 
    arrange(desc(count))
  
  summary_table <- kable(summary_df, format = "html", col.names = c(category_name, "Count", "Percentage (%)")) %>%
    kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed")) %>%
  print(summary_table)
  
  graph <- ggplot(summary_df, aes(x = reorder(Category, -count), y = count, fill = Category)) +
    geom_bar(stat = "identity", color = "white", show.legend = FALSE) +
    coord_flip() +
    labs(title = paste(category_name, "Demographic Makeup"),
         x = "",
         y = "Count") +
    theme_minimal(base_size = 15) +
    theme(axis.title.x = element_text(margin = margin(t = 20)),
          axis.title.y = element_text(margin = margin(r = 20)),
          plot.title = element_text(hjust = 0.5, face = "bold", size = 18)) +
    scale_fill_brewer(palette = "Set3")
  return(list(summary_table = summary_table, graph = graph))
}

render_summary_table_graph(data, `What.is.your.race.and.or.ethnicity..Check.all.that.apply....Selected.Choice`, "Race/Ethnicity")
render_summary_table_graph(data, `How.would.you.describe.yourself...Mark.one.answer....Selected.Choice`, "Gender Identity")
# render_summary_table_graph(data, `Institution.Type`, "Institution Type")
render_summary_table_graph(data, Role, "Role")
```

```{r}
library(htmltools)
generate_summary_table <- function(df, column, category_name) {
  summary_df <- df %>%
    mutate({{column}} := ifelse({{column}} == "Genderfluid, Genderqueer, or Gender Non-conforming", "Gender fluid/queer/non-conforming", {{column}})) %>%
    separate_rows({{column}}, sep = ",") %>%
    mutate({{column}} := str_trim({{column}})) %>% 
    mutate({{column}} := case_when(
      {{column}} %in% c("Nonbinary", "Agender", "Gender fluid/queer/non-conforming") ~ "Genderqueer*",
      TRUE ~ as.character({{column}})
    ))
  total <- nrow(summary_df)
  
   summary_df <- summary_df %>%
    count({{column}}, name = "count") %>%
    mutate(percentage = round((count / total) * 100, 2)) %>%
    rename(Category = {{column}}) %>%
    arrange(desc(count))
  
  if (category_name %in% c("Race/Ethnicity", "Gender Identity")) {
    summary_df <- summary_df %>%
      mutate(order = case_when(
        Category == "Decline to state" ~ 1,
        Category == "Other (write-in)" ~ 2,
        TRUE ~ 0
      )) %>%
      arrange(order, desc(count)) %>%
      select(-order)
  }
  
  return(summary_df)
}

summary_df_race_ethnicity <- generate_summary_table(data, `What.is.your.race.and.or.ethnicity..Check.all.that.apply....Selected.Choice`, "Race/Ethnicity")
summary_df_gender_identity <- generate_summary_table(data, `How.would.you.describe.yourself...Mark.one.answer....Selected.Choice`, "Gender Identity")
summary_df_role <- generate_summary_table(data, Role, "Role")

formatted_table_race_ethnicity <- summary_df_race_ethnicity %>%
  kable(format = "html", col.names = c("Race/Ethnicity", "Count", "Percentage (%)")) %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed")) %>%
  column_spec(1, width = "20%") %>%
  column_spec(2:3, width = "10%", extra_css = "text-align: right;")

formatted_table_gender_identity <- summary_df_gender_identity %>%
  kable(format = "html", col.names = c("Gender Identity", "Count", "Percentage (%)")) %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed")) %>%
  column_spec(1, width = "20%") %>%
  column_spec(2:3, width = "10%", extra_css = "text-align: right;")

note_gender_identity <- "<p style='font-size: 10pt;'><strong>Note:</strong> Original category names & counts for genderqueer category were: Genderfluid, Genderqueer, or Gender Non-conforming - 75 (2.94%), Nonbinary - 3 (0.12%), Agender - 1 (0.04%)</p>"


formatted_table_role <- summary_df_role %>%
  kable(format = "html", col.names = c("Role", "Count", "Percentage (%)")) %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed")) %>%
  column_spec(1, width = "20%") %>%
  column_spec(2:3, width = "10%", extra_css = "text-align: right;")
combined_table <- paste(
  "<h2 style='text-align: left; font-size: 12pt;'>Table 1: Respondent Demographic Information (N=2549)</h2>",
  as.character(formatted_table_race_ethnicity),
  as.character(formatted_table_gender_identity),
  as.character(formatted_table_role),
  note_gender_identity,
  sep = ""
)
HTML(combined_table)
```

## Faceting

```{r}
personal_prefix <- "Currently..are.you.concerned.about.the.following....If.you.are.not..leave.blank...__________About......Personal.impacts..."
professional_prefix <- "Currently..are.you.concerned.about.the.following....If.you.are.not..leave.blank.....__________Abo......Academic.and.or.professional.impacts..."
race_prefix <- 'What.is.your.race.and.or.ethnicity..Check.all.that.apply....Selected.Choice'

remove_prefix <- function(column_name, prefix_to_remove) {
  column_name <- gsub(prefix_to_remove, "", column_name)
  return(column_name)
}

personal_concern_columns <- grep(personal_prefix, names(data), value = TRUE)
professional_concern_columns <- grep(professional_prefix, names(data), value = TRUE)
race_columns <- grep(race_prefix, names(data), value = TRUE)

cleaned_personal_column_names <- lapply(personal_concern_columns, remove_prefix, prefix_to_remove = personal_prefix)
cleaned_professional_column_names <- lapply(professional_concern_columns, remove_prefix, prefix_to_remove = professional_prefix)

df_personal <- data[c(personal_concern_columns, race_columns)]
df_professional <- data[c(professional_concern_columns,race_columns)]
names(df_personal) <- c(cleaned_personal_column_names, 'Race_Ethnicity')
names(df_professional) <- c(cleaned_professional_column_names, 'Race_Ethnicity')
```

```{r}
head(df_personal)
```

```{r}
df_personal[] <- lapply(df_personal[], as.character)

personal_data_long <- df_personal %>%
  mutate(id = row_number()) %>%
  separate_rows(General.well.being, sep = ",") %>%
  separate_rows(Race_Ethnicity, sep = ",") %>%
  mutate(General.well.being = as.integer(General.well.being))

concern_counts <- personal_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(
    pre_covid = sum(General.well.being == 1),
    post_covid = sum(General.well.being == 2)
  )
concern_counts2 <- concern_counts %>%
  mutate(difference = post_covid - pre_covid)

ggplot(concern_counts2, aes(x = difference, y = difference, fill = Race_Ethnicity)) +
  geom_bar(stat = "identity") +
  labs(title = "Difference in Post-Pre COVID Concerns for General Well-being by Race/Ethnicity",
       x = "Race/Ethnicity",
       y = "Difference in Concerns (Post - Pre)") +
  theme_minimal() +
  theme(axis.text.y = element_blank())
```

```{r}
concern_counts %>%
  kable(col.names = c("Race/Ethnicity", "Pre-COVID Concerns", "Post-COVID Concerns"), 
        caption = "Pre and New COVID Concerns for General Well-being by Race/Ethnicity") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```

```{r}
df_professional[] <- lapply(df_professional[], as.character)

professional_data_long <- df_professional %>%
  mutate(id = row_number()) %>%
  separate_rows(Professional.development..internships..programs..conferences., sep = ",") %>%
  separate_rows(Race_Ethnicity, sep = ",") %>%
  mutate(General.well.being = as.integer(Professional.development..internships..programs..conferences.))

total_counts <- professional_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(total = n())

concern_counts <- professional_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(
    pre_covid = sum(Professional.development..internships..programs..conferences. == 1),
    post_covid = sum(Professional.development..internships..programs..conferences. == 2)
  ) %>%
  left_join(total_counts, by = "Race_Ethnicity") %>%
  mutate(
    pre_covid_prop = round((pre_covid / total) * 100, 2),
    post_covid_prop = round((post_covid / total) * 100, 2),
  )

concern_counts %>%
  select(Race_Ethnicity, pre_covid_prop, post_covid_prop) %>%
  kable(col.names = c("Race/Ethnicity", "Pre-COVID Proportion (%)", "New COVID Proportion (%)"), 
        caption = "Pre and New COVID Concerns for Professional Development (Proportions)") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```

```{r}
# ggplot(concern_counts, aes(x = Race_Ethnicity, y = difference, fill = Race_Ethnicity)) +
#   geom_bar(stat = "identity") +
#   labs(title = "Difference in Proportion of Professional Development by Race",
#        x = "", y = "Difference in Proportion (Post - Pre)") +
#   theme_minimal() +
#   theme(axis.text.x=element_blank(), 
#         axis.ticks.x=element_blank())
```

```{r}
df_personal[] <- lapply(df_personal[], as.character)

personal_data_long <- df_personal %>%
  mutate(id = row_number()) %>%
  separate_rows(General.well.being, sep = ",") %>%
  separate_rows(Race_Ethnicity, sep = ",") %>%
  mutate(General.well.being = as.integer(General.well.being))

total_counts <- personal_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(total = n())

concern_counts <- personal_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(
    pre_covid = sum(General.well.being == 1),
    post_covid = sum(General.well.being == 2)
  ) %>%
  left_join(total_counts, by = "Race_Ethnicity") %>%
  mutate(
    pre_covid_prop = round((pre_covid / total) * 100, 2),
    post_covid_prop = round((post_covid / total) * 100, 2)
  )

concern_counts %>%
  select(Race_Ethnicity, pre_covid_prop, post_covid_prop) %>%
  kable(col.names = c("Race/Ethnicity", "Pre-COVID Proportion (%)", "New COVID Proportion (%)"), 
        caption = "Pre and New COVID Concerns for General Well-being by Race/Ethnicity (Proportions)") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```

```{r}
# ggplot(concern_counts, aes(x = Race_Ethnicity, y = difference, fill = Race_Ethnicity)) +
#   geom_bar(stat = "identity") +
#   labs(title = "Difference in Proportion of Generall Well Being by Race",
#        x = "", y = "Difference in Proportion (Post - Pre)") +
#   theme_minimal() +
#   theme(axis.text.x=element_blank(), 
#         axis.ticks.x=element_blank())
```

**Together**

```{r}
professional_data_long <- df_professional %>%
  mutate(id = row_number()) %>%
  separate_rows(Professional.development..internships..programs..conferences., sep = ",") %>%
  separate_rows(Race_Ethnicity, sep = ",") %>%
  mutate(Concern = as.integer(Professional.development..internships..programs..conferences.))

total_counts_professional <- professional_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(total = n())


personal_data_long <- df_personal %>%
  mutate(id = row_number()) %>%
  separate_rows(General.well.being, sep = ",") %>%
  separate_rows(Race_Ethnicity, sep = ",") %>%
  mutate(Concern = as.integer(General.well.being))

total_counts_personal <- personal_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(total = n())


concern_counts_professional <- professional_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(
    pre_covid = sum(Concern == 1),
    post_covid = sum(Concern == 2)
  ) %>%
  left_join(total_counts_professional, by = "Race_Ethnicity") %>%
  mutate(
    pre_covid_prop_professional = round((pre_covid / total) * 100, 2),
    post_covid_prop_professional = round((post_covid / total) * 100, 2)
  )


concern_counts_personal <- personal_data_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(
    pre_covid = sum(Concern == 1),
    post_covid = sum(Concern == 2)
  ) %>%
  left_join(total_counts_personal, by = "Race_Ethnicity") %>%
  mutate(
    pre_covid_prop_personal  = round((pre_covid / total) * 100, 2),
    post_covid_prop_personal  = round((post_covid / total) * 100, 2)
  )

combined_counts <- full_join(
  concern_counts_personal %>% select(Race_Ethnicity, pre_covid_prop_personal, post_covid_prop_personal),
  concern_counts_professional %>% select(Race_Ethnicity, pre_covid_prop_professional, post_covid_prop_professional),
  by = "Race_Ethnicity"
) %>%
  mutate(
    Category = ifelse(is.na(pre_covid_prop_personal), "Professional Development", "General Well-being")
  ) %>%
  select(Race_Ethnicity, pre_covid_prop_personal, post_covid_prop_personal, pre_covid_prop_professional, post_covid_prop_professional)

combined_counts %>%
  kable(col.names = c("Race/Ethnicity", "Pre-COVID Prop.", "New COVID Prop.", "Pre-COVID Prop.", "New COVID Prop."),
        caption = "Table 2: Pre and New COVID Concerns by Race/Ethnicity and Category (Proportions)") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
  add_header_above(c("  " = 1, "General Well-being" = 2, "Professional Development" = 2))
```

```{r}
professional_labels <- c("Learning environment", "Completing education", "Decisions about graduate school",
                         "Other education-related", "Professional development", "Finding a job",
                         "Keeping current job", "Telework tools", "Telework productivity")
personal_labels <- c("Nutrition", "Housing", "Medical", "Finances", "General Well Being", "Mental Health",
                     "Living Conditions", "Distance from Friends & Family", "Relationships", "Childcare", 
                     "Education for Kids")
col_names <- names(df_professional)[1:(ncol(df_professional) - 3)]
df_professional <- df_professional %>% rename_at(vars(col_names), ~ professional_labels)
col_names <- names(df_personal)[-ncol(df_personal)]
df_personal <- df_personal %>% rename_at(vars(col_names), ~ personal_labels)

df_professional_long <- df_professional %>%
  select(Race_Ethnicity, all_of(top3_professional)) %>%
  pivot_longer(cols = all_of(top3_professional), names_to = "Category", values_to = "Concern") %>%
  separate_rows(Race_Ethnicity, sep = ",")

total_counts_professional <- df_professional_long %>%
  group_by(Race_Ethnicity) %>%
  summarize(total = n())

concern_counts_professional <- df_professional_long %>%
  group_by(Race_Ethnicity, Category) %>%
  summarize(pre_covid = sum(Concern == 1, na.rm = TRUE),
            post_covid = sum(Concern == 2, na.rm = TRUE)) %>%
  left_join(total_counts_professional, by = "Race_Ethnicity") %>%
  mutate(
    pre_covid_prop = round((pre_covid / total) * 100, 2),
    post_covid_prop = round((post_covid / total) * 100, 2)
  ) %>%
  select(Race_Ethnicity, Category, pre_covid_prop, post_covid_prop)

wide_concern_counts <- concern_counts_professional %>%
  pivot_wider(
    names_from = Category,
    values_from = c(pre_covid_prop, post_covid_prop),
    names_sep = "_"
  )

wide_concern_counts <- wide_concern_counts %>%
  mutate(order = ifelse(Race_Ethnicity == "Other (write-in)", 1, 0)) %>%
  arrange(order, Race_Ethnicity) %>%
  select(-order)

wide_concern_counts <- wide_concern_counts %>%
  select(Race_Ethnicity, 
         starts_with("pre_covid_prop_Learning Environment"), starts_with("post_covid_prop_Learning Environment"),
         starts_with("pre_covid_prop_Telework Productivity"), starts_with("post_covid_prop_Telework Productivity"),
         starts_with("pre_covid_prop_Professional Development"), starts_with("post_covid_prop_Professional Development"))

colnames(wide_concern_counts) <- c(
  "Race/Ethnicity",
  "Pre-COVID Prop.", "New COVID Prop.",
  "Pre-COVID Prop.", "New COVID Prop.",
  "Pre-COVID Prop.", "New COVID Prop."
)

wide_concern_counts %>%
  kable(
    col.names = c("Race/Ethnicity", "Pre-COVID Prop.", "New COVID Prop.", "Pre-COVID Prop.", "New COVID Prop.", "Pre-COVID Prop.", "New COVID Prop."),
    caption = "Table 2: Top 3 Pre and New COVID Concerns for Professional Development by Race/Ethnicity (Proportions)"
  ) %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive")) %>%
  add_header_above(c(" " = 1, "Learning Environment" = 2, "Telework Productivity" = 2, "Professional Development" = 2))
```

## Try By Role

```{r}
personal_prefix <- "Currently..are.you.concerned.about.the.following....If.you.are.not..leave.blank...__________About......Personal.impacts..."
professional_prefix <- "Currently..are.you.concerned.about.the.following....If.you.are.not..leave.blank.....__________Abo......Academic.and.or.professional.impacts..."

remove_prefix <- function(column_name, prefix_to_remove) {
  column_name <- gsub(prefix_to_remove, "", column_name)
  return(column_name)
}

personal_concern_columns <- grep(personal_prefix, names(data), value = TRUE)
professional_concern_columns <- grep(professional_prefix, names(data), value = TRUE)

cleaned_personal_column_names <- lapply(personal_concern_columns, remove_prefix, prefix_to_remove = personal_prefix)
cleaned_professional_column_names <- lapply(professional_concern_columns, remove_prefix, prefix_to_remove = professional_prefix)

df_personal <- data[c(personal_concern_columns, "Role")]
df_professional <- data[c(professional_concern_columns,"Role")]
names(df_personal) <- c(cleaned_personal_column_names, 'Role')
names(df_professional) <- c(cleaned_professional_column_names, 'Role')
```

```{r}
df_professional <- df_professional %>%
  select(-starts_with("Other..write.in."))
professional_labels <- c("Learning environment", "Completing education", "Decisions about graduate school", "Other education-related", "Professional development", "Finding a job", "Keeping current job", "Telework tools", "Telework productivity")

df_professional[] <- lapply(df_professional[], as.character)

professional_columns <- names(df_professional)[-which(names(df_professional) == "Role")]

personal_data_long <- df_professional %>%
  mutate(id = row_number()) %>%
  separate_rows(Role, sep = ",") %>%
  pivot_longer(cols = all_of(professional_columns), 
               names_to = "Professional_Development", 
               values_to = "Concern",) %>%
  separate_rows(Concern, sep = ",") %>%
  mutate(Concern = as.integer(Concern)) %>% 
  mutate(Professional_Development = recode(Professional_Development, !!!setNames(professional_labels, professional_columns)))

total_counts <- personal_data_long %>%
  group_by(Role, Professional_Development) %>%
  summarize(total = n(), .groups = 'drop')

concern_counts <- personal_data_long %>%
  group_by(Role, Professional_Development) %>%
  summarize(
    pre_covid = sum(Concern == 1),
    post_covid = sum(Concern == 2),
    .groups = 'drop'
  ) %>%
  left_join(total_counts, by = c("Role", "Professional_Development")) %>%
  mutate(
    pre_covid_prop = round((pre_covid / total) * 100, 2),
    post_covid_prop = round((post_covid / total) * 100, 2),
    difference = round(post_covid_prop - pre_covid_prop, 2)
  )

concern_counts %>%
  select(Role, Professional_Development, pre_covid_prop, post_covid_prop, difference) %>%
  kable(col.names = c("Role", "Professional Development", "Pre-COVID Proportion (%)", "Post-COVID Proportion (%)", "Difference (Post - Pre)"), 
        caption = "Difference in Post-Pre COVID Concerns for Professional Development (Proportions)") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```

```{r}
gray_palette <- c("#CCCCCC", "#999999", "#666666", "#333333", "#222222", "#111111")
ggplot(concern_counts, aes(x = Role, y = post_covid_prop, fill = Role)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ Professional_Development, scales = "free_y") +
  scale_fill_manual(values = gray_palette) +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
  labs(title = "Proportion of New COVID Concerns by Role Faceted by Professional Developement Category",
       x = "", y = "") +
  theme_minimal() +
  theme(axis.text.x=element_blank(), 
        axis.ticks.x=element_blank(),
        legend.position = "bottom",
        plot.caption = element_text(hjust = 0, size = 12))+
  labs(caption = "Fig. 2. Proportion of concerns related to new COVID issues by role, grouped by professional development category")
```

```{r}
library(ggpattern)
gray_palette <- c("#CCCCCC", "#999999", "#999999", "#666666", "#333333","#111111")
ggplot(concern_counts, aes(x = Role, y = post_covid_prop, fill = Role)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ Professional_Development, scales = "free_y") +
  scale_fill_manual(values = gray_palette) +
  scale_y_continuous(limits = c(0, 100), expand = c(0, 0)) +
  labs(title = "Proportion of New COVID Concerns by Role Faceted by Professional Developement Category",
       x = "", y = "") +
  theme_minimal() +
  theme(axis.text.x=element_blank(), 
        axis.ticks.x=element_blank(),
        legend.position = "bottom",
        plot.caption = element_text(hjust = 0, size = 12))+
  labs(caption = "Fig. 2. Proportion of concerns related to new COVID issues by role, grouped by professional development category") +
  scale_pattern_manual(
    "Position",
    values = c("none", "none", "stripe", "none", "none")
  ) +
  geom_col_pattern(
    aes(pattern = Role),
    position = "dodge",
    pattern_angle = 45,
    pattern_density = .1,
    pattern_spacing = .04,
    pattern_fill = "black",
    color = "black"
  ) 
```

```{r}
ggplot(concern_counts, aes(x = Professional_Development, y = post_covid_prop, fill = Professional_Development)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ Role, scales = "free_y") +
  labs(title = "Proportion of New COVID Concerns by Professional Development Category Faceted by Role",
       x = "", y = "Difference in Proportion (Post - Pre)") +
  theme_minimal() +
  theme(axis.text.x=element_blank(), 
        axis.ticks.x=element_blank())
```

```{r}
ggplot(concern_counts, aes(x = Professional_Development, y = difference, fill = Role)) +
  geom_bar(stat = "identity", position = "dodge2") +
  labs(title = "Difference in Proportion of COVID Concerns by Professional Development Category and Role",
       x = "", y = "Difference in Proportion (Post - Pre)") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1))
```

## Feeling Supported vs Professional Development

```{r}
df_professional$supported <- data$Did.you.feel.supported.from.your.institution..department..team..etc...

personal_data_long <- df_professional %>%
  mutate(id = row_number()) %>%
  separate_rows(supported, sep = ",") %>%
  pivot_longer(cols = all_of(professional_columns), 
               names_to = "Professional_Development", 
               values_to = "Concern") %>%
  separate_rows(Concern, sep = ",") %>%
  mutate(Concern = as.integer(Concern)) %>%
  mutate(Professional_Development = recode(Professional_Development, !!!setNames(professional_labels, professional_columns)))

total_counts <- personal_data_long %>%
  group_by(supported, Professional_Development) %>%
  summarize(total = n(), .groups = 'drop')

concern_counts <- personal_data_long %>%
  group_by(supported, Professional_Development) %>%
  summarize(
    pre_covid = sum(Concern == 1),
    post_covid = sum(Concern == 2),
    .groups = 'drop'
  ) %>%
  left_join(total_counts, by = c("supported", "Professional_Development")) %>%
  mutate(
    pre_covid_prop = round((pre_covid / total) * 100, 2),
    post_covid_prop = round((post_covid / total) * 100, 2)
  )

concern_counts %>%
  select(supported, Professional_Development, pre_covid_prop, post_covid_prop) %>%
  kable(col.names = c("Supported", "Professional Development", "Pre-COVID Proportion (%)", "New COVID Proportion (%)"), 
        caption = "Pre and New COVID Concerns for Professional Development by Support (Proportions)") %>%
  kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
```

```{r}
ggplot(concern_counts, aes(x = supported, y = post_covid_prop, fill = supported)) +
  geom_bar(stat = "identity") +
  facet_wrap(~ Professional_Development, scales = "free_y") +
  labs(title = "Proportion of New COVID Concerns by Feelings of Support From  Institution Faceted by Professional Development Category",
       x = "", y = "Difference in Proportion (Post - Pre)") +
  theme_minimal() +
  theme(axis.text.x=element_blank(), 
        axis.ticks.x=element_blank())
```

## Checking Written Responses

```{r}
word_data <- data.frame(
  helpful = data$Related.to.COVID.19..what.information.have.you.received.from.this.institution.that.has.been.most.HELPFUL.to.you..in.terms.of.your.own.studies..work..and.or.projects....Note..This.could.be.via.email..printed..etc.,
  unhelpful = data$Related.to.COVID.19..what.information.have.you.received.from.this.institution.that.has.been.most.UNHELPFUL.to.you..in.terms.of.your.own.studies..work..and.or.projects....Note..This.could.be.via.email..printed..etc.
)

responses <- word_data %>%
  pivot_longer(cols = c(helpful, unhelpful), 
               names_to = "Type", 
               values_to = "Response") %>%
  filter(!is.na(Response))

responses_tokens <- responses %>%
  unnest_tokens(word, Response) %>%
  filter(!word %in% stop_words$word) %>%
  filter(!str_detect(word, "^[0-9]+$"))

responses_tokens <- responses_tokens %>%
  mutate(word = wordStem(word, language = "en"))

word_counts <- responses_tokens %>%
  count(Type, word, sort = TRUE)

top_words <- word_counts %>%
  group_by(Type) %>%
  slice_max(n, n = 10)

ggplot(top_words, aes(x = reorder_within(word, n, Type), y = n, fill = Type)) +
  geom_col(show.legend = FALSE) +
  facet_wrap(~Type, scales = "free_y") +
  scale_x_reordered() +
  labs(y = "Frequency", x = "Words", title = "Most Common Words in Helpful and Unhelpful Responses") +
  coord_flip()

top_words %>%
  arrange(Type, desc(n)) %>%
  print()
```
